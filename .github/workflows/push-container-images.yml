name: Push container images
on:
  workflow_dispatch:
    inputs:
      version:
        description: Full version of container image to push
        required: true
        type: string
jobs:
  push:
    runs-on: ubuntu-latest
    name: Push
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: Validate build version
        id: validate
        uses: ./.github/actions/validate-version
        with:
          version: ${{ inputs.version }}
      - name: Log in to GitHub container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Azure Container Registry login
        run: |
          az acr login --name pswtestregistry --username pswtestregistry --password "${{ secrets.TEMP_ACR_PASSWORD }}"
      - name: Try pushing tag between repos
        run: |
          $containers = @('servicecontrol', 'servicecontrol-audit', 'servicecontrol-monitoring')
          $tags = "${{ steps.validate.outputs.container-tags }}" -Split ','
          $sourceTag = "${{ inputs.version }}"
          $dbArchTags = @('x64', 'arm64v8', 'arm32v7')

          foreach ($tag in $tags)
          {
            foreach($name in $containers)
            {
              Write-Output "::group::Pushing $($name):$($tag)"
              $cmd = "docker buildx imagetools create --tag pswtestregistry.azurecr.io/$($name):$($tag) ghcr.io/particular/$($name):$($sourceTag)"
              Write-Output "Command: $cmd"
              Invoke-Expression $cmd
              Write-Output "::endgroup::"
            }
            foreach ($dbArch in $dbArchTags)
            {
              Write-Output "::group::Pushing servicecontrol-ravendb:$($tag)-$($dbArch)"
              $cmd = "docker buildx imagetools create --tag pswtestregistry.azurecr.io/servicecontrol-ravendb:$($tag)-$($dbArch) ghcr.io/particular/servicecontrol-ravendb:$($sourceTag)-$($dbArch)"
              Write-Output "Command: $cmd"
              Invoke-Expression $cmd
              Write-Output "::endgroup::"
            }
          }
