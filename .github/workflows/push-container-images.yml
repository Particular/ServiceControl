name: Push container images
on:
  workflow_dispatch:
    inputs:
      version:
        description: Full version of container image to push. Normally, this should exactly match the tag name.
        required: true
        type: string
jobs:
  push:
    runs-on: ubuntu-latest
    name: Push
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: Validate build version
        id: validate
        uses: ./.github/actions/validate-version
        with:
          version: ${{ inputs.version }}
      - name: Log in to GitHub container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Login to Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish to Docker Hub
        run: |
          $containers = @('servicecontrol', 'servicecontrol-audit', 'servicecontrol-monitoring')
          $tags = "${{ steps.validate.outputs.container-tags }}" -Split ','
          $sourceTag = "${{ inputs.version }}"
          $dbArchTags = @('x64', 'arm64v8', 'arm32v7')

          foreach ($tag in $tags)
          {
            foreach($name in $containers)
            {
              Write-Output "::group::Pushing $($name):$($tag)"
              $cmd = "docker buildx imagetools create --tag particular/$($name):$($tag) ghcr.io/particular/$($name):$($sourceTag)"
              Write-Output "Command: $cmd"
              Invoke-Expression $cmd
              Write-Output "::endgroup::"
            }
            foreach ($dbArch in $dbArchTags)
            {
              Write-Output "::group::Pushing servicecontrol-ravendb:$($tag)-$($dbArch)"
              $cmd = "docker buildx imagetools create --tag particular/servicecontrol-ravendb:$($tag)-$($dbArch) ghcr.io/particular/servicecontrol-ravendb:$($sourceTag)-$($dbArch)"
              Write-Output "Command: $cmd"
              Invoke-Expression $cmd
              Write-Output "::endgroup::"
            }
          }
      - name: Update Docker Hub Description - ServiceControl
        if: ${{ steps.validate.outputs.latest == 'true' }}
        uses: peter-evans/dockerhub-description@v4.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: particular/servicecontrol
          readme-filepath: ./Container-README.md
      - name: Update Docker Hub Description - Audit
        if: ${{ steps.validate.outputs.latest == 'true' }}
        uses: peter-evans/dockerhub-description@v4.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: particular/servicecontrol-audit
          readme-filepath: ./Container-README.md
      - name: Update Docker Hub Description - Monitoring
        if: ${{ steps.validate.outputs.latest == 'true' }}
        uses: peter-evans/dockerhub-description@v4.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: particular/servicecontrol-monitoring
          readme-filepath: ./Container-README.md
      - name: Update Docker Hub Description - RavenDB
        if: ${{ steps.validate.outputs.latest == 'true' }}
        uses: peter-evans/dockerhub-description@v4.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: particular/servicecontrol-ravendb
          readme-filepath: ./Container-README.md
