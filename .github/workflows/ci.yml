name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    name: ${{ matrix.name }} - ${{ matrix.storage }}
    runs-on: windows-2022
    strategy:
      matrix:
        name: [LearningTransport, Msmq, SqlServer, RabbitMQ-Conventional-Classic, RabbitMQ-Conventional-Quorum, RabbitMQ-Direct-Classic, RabbitMQ-Direct-Quorum, AzureServiceBusNetStandard, AzureServiceBus-ForwardingTopology, AzureServiceBus-EndpointTopology, AzureStorageQueues, SQS]
        storage: [RavenDb]
        include:
          - name: LearningTransport
            transport: LearningTransport
            customization: ConfigureEndpointLearningTransport
          - name: Msmq
            transport: Msmq
            customization: ConfigureEndpointMsmqTransport
          - name: SqlServer
            transport: SqlServer
            customization: ConfigureEndpointSqlServerTransport
          - name: RabbitMQ-Conventional-Classic
            transport: RabbitMQ
            customization: ConfigureEndpointRabbitMQClassicConventionalRoutingTransport
          - name: RabbitMQ-Conventional-Quorum
            transport: RabbitMQ
            customization: ConfigureEndpointRabbitMQQuorumConventionalRoutingTransport
          - name: RabbitMQ-Direct-Classic
            transport: RabbitMQ
            customization: ConfigureEndpointRabbitMQClassicDirectRoutingTransport
          - name: RabbitMQ-Direct-Quorum
            transport: RabbitMQ
            customization: ConfigureEndpointRabbitMQQuorumDirectRoutingTransport
          - name: AzureServiceBusNetStandard
            transport: AzureServiceBusNetStandard
            customization: ConfigureEndpointAzureServiceBusNetStandardTransport
          - name: AzureServiceBus-ForwardingTopology
            transport: AzureServiceBus
            customization: ConfigureEndpointAzureServiceBusForwardingTopologyTransport
          - name: AzureServiceBus-EndpointTopology
            transport: AzureServiceBus
            customization: ConfigureEndpointAzureServiceBusEndpointTopologyTransport
          - name: AzureStorageQueues
            transport: AzureStorageQueues
            customization: ConfigureEndpointAzureStorageQueueTransport
          - name: SQS
            transport: SQS
            customization: ConfigureEndpointSQSTransport
      fail-fast: false
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        shell: pwsh
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: 6.0.x
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build
        run: msbuild src -p:Configuration=Release -restore -m -verbosity:minimal
      - name: Upload packages
        if: matrix.transport == 'Msmq' && matrix.storage == 'RavenDb'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: assets
          path: |
            nugets/
            zip/
            assets/
          retention-days: 1
      - name: Azure login
        uses: azure/login@v1.4.5
        with:
          creds: ${{ secrets.AZURE_ACI_CREDENTIALS }}
      - name: Setup SQL Server
        if: matrix.transport == 'SqlServer'
        uses: Particular/install-sql-server-action@v1.0.0
        with:
          connection-string-env-var: ServiceControl.AcceptanceTests.ConnectionString
          catalog: nservicebus
      - name: Setup RabbitMQ
        if: matrix.transport == 'RabbitMQ'
        uses: Particular/setup-rabbitmq-action@v1.2.0
        with:
          connection-string-name: ServiceControl.AcceptanceTests.ConnectionString
          tag: ServiceControl
      - name: Setup Azure Service Bus
        if: matrix.transport == 'AzureServiceBus' || matrix.transport == 'AzureServiceBusNetStandard'
        uses: Particular/setup-azureservicebus-action@v1.0.0
        with:
          connection-string-name: ServiceControl.AcceptanceTests.ConnectionString
          tag: ServiceControl

      - name: Setup Azure Storage Queues
        if: matrix.transport == 'AzureStorageQueues'
        uses: Particular/setup-azurestorage-action@v1.0.0
        with:
          connection-string-name: ServiceControl.AcceptanceTests.ConnectionString
          tag: ServiceControl
      - name: Setup SQS environment variables
        if: matrix.Transport == 'SQS'
        shell: pwsh
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

          # Cleanup of queues starting with `GHA-` handled by https://github.com/Particular/NServiceBus.AmazonSQS/blob/master/.github/workflows/tests-cleanup.yml
          $connectString = "AccessKeyId=${{ secrets.AWS_ACCESS_KEY_ID }};SecretAccessKey=${{ secrets.AWS_SECRET_ACCESS_KEY }};Region=${{ secrets.AWS_REGION }};QueueNamePrefix=GHA-${{ matrix.storage }}-${{ github.run_id }}"
          echo "ServiceControl.AcceptanceTests.ConnectionString=$connectString" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: Run tests
        uses: Particular/run-tests-action@v1.3.0
        env:
          ServiceControl.AcceptanceTests.Transport: ${{ matrix.transport }}
          ServiceControl.AcceptanceTests.TransportCustomization: ${{ matrix.customization }}
          ServiceControl/DataStoreType: ${{ matrix.storage }}
          ServiceControl/LicenseText: ${{ secrets.LICENSETEXT }}
          ServiceControl.Audit/LicenseText: ${{ secrets.LICENSETEXT }}
          Monitoring/LicenseText: ${{ secrets.LICENSETEXT }}
