<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Styles/Palette.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Styles/Icons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Styles/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BasicButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="40,10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">

                                <VisualState Name="Normal" />

                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource Gray90Brush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource Gray70Brush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.30" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HiliteButton"
           BasedOn="{StaticResource BasicButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ThemeBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkThemeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">

                                <VisualState Name="Normal" />

                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource LightThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource DarkThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.30" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorButton"
           BasedOn="{StaticResource BasicButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ErrorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkErrorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">

                                <VisualState Name="Normal" />

                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource LightErrorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource DarkErrorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource Gray60Brush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame Value="{StaticResource Gray50Brush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:0"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="(TextElement.Foreground)">
                                            <DiscreteObjectKeyFrame Value="{StaticResource Gray70Brush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeBrush}" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="LinkButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeBrush}" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Storyboard x:Key="IconButtonMouseOverStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Background">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource WhiteBrush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="IconButtonPressedStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Background">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource DarkThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="BorderBrush">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource DarkThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource WhiteBrush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="IconButtonDisabledStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="BorderBrush">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Gray60Brush}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Gray60Brush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Icon2ButtonMouseOverStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource LightThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Icon2ButtonPressedStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource DarkThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Icon2ButtonDisabledStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Gray60Brush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="LinkButtonMouseOverStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource LightThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource LightThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="LinkButtonPressedStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource DarkThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource DarkThemeBrush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="LinkButtonDisabledStoryboard">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Icon" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Gray60Brush}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Gray60Brush}" />
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="IconButtonToolTipStyle" TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="Foreground" Value="{StaticResource ThemeBrush}" />
        <Setter Property="Placement" Value="Center" />
    </Style>

    <Style x:Key="ConfigurationButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource ConfigurationIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height, Converter={StaticResource negate}}">
                                <TextBlock Text="CONFIGURATION" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource RemoveIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height, Converter={StaticResource negate}}">
                                <TextBlock Text="REMOVE" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AdvancedOptionsButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource AdvanceIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height, Converter={StaticResource negate}}">
                                <TextBlock Text="ADVANCED OPTIONS" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SaveButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource SaveIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height}">
                                <TextBlock Text="SAVE" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StartButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource StartIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height, Converter={StaticResource negate}}">
                                <TextBlock Text="START" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StopButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource StopIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height, Converter={StaticResource negate}}">
                                <TextBlock Text="STOP" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HelpButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource HelpIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height}">
                                <TextBlock Text="HELP" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LicenseButton"
           BasedOn="{StaticResource LinkButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource LinkButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource LinkButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource LinkButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Control x:Name="Icon"
                                 Width="12"
                                 Height="12"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 SnapsToDevicePixels="True"
                                 Template="{StaticResource LicenseIcon}" />

                        <TextBlock x:Name="Text"
                                   Grid.Column="1"
                                   Margin="5,0,0,0"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="LICENSE" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OriginalNewButton"
           BasedOn="{StaticResource LinkButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource LinkButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource LinkButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource LinkButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Control x:Name="Icon"
                                 Width="12"
                                 Height="12"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 SnapsToDevicePixels="True"
                                 Template="{StaticResource NewIcon}" />

                        <TextBlock x:Name="Text"
                                   Grid.Column="1"
                                   Margin="5,0,0,0"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="NEW INSTANCE" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ThemeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource LinkButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource LinkButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource LinkButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Control x:Name="Icon"
                                 Width="12"
                                 Height="12"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 SnapsToDevicePixels="True"
                                 Template="{StaticResource NewIcon}" />

                        <TextBlock x:Name="Text"
                                   Grid.Column="1"
                                   Margin="5,0,0,0"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="NEW ▾" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OpenFolderButton"
           BasedOn="{StaticResource IconButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Control x:Name="Icon"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Template="{StaticResource OpenFolderIcon}" />

                        <Border.ToolTip>
                            <ToolTip Style="{StaticResource IconButtonToolTipStyle}" VerticalOffset="{TemplateBinding Height}">
                                <TextBlock Text="BROWSE" />
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource IconButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource IconButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource IconButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RefreshButton"
           BasedOn="{StaticResource LinkButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource LinkButtonMouseOverStoryboard}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource LinkButtonPressedStoryboard}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource LinkButtonDisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Control x:Name="Icon"
                                 Width="12"
                                 Height="12"
                                 Background="{TemplateBinding Background}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 SnapsToDevicePixels="True"
                                 Template="{StaticResource RefreshIcon}" />

                        <TextBlock x:Name="Text"
                                   Grid.Column="1"
                                   Margin="5,0,0,0"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="REFRESH" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource BasicButton}" TargetType="{x:Type Button}" />

    <!--  ==================== ContextMenu ====================  -->

    <SolidColorBrush x:Key="MenuHiliteBrush">#2D2D2D</SolidColorBrush>
    <SolidColorBrush x:Key="Grey60Brush">#999999</SolidColorBrush>
    
    <Style x:Key="DarkMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="False">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0"
                                                  Width="Auto"
                                                  MinWidth="17"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3" Width="14" />
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="SubMenuPopup"
                                   AllowsTransparency="True"
                                   Focusable="false"
                                   HorizontalOffset="-1"
                                   IsOpen="{Binding Path=IsSubmenuOpen,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Right"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Grid Margin="0,0,5,5">
                                    <!--  Border 2  -->
                                    <Border x:Name="SubMenuBorder"
                                            Background="Black"
                                            BorderBrush="Black"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                        <Grid x:Name="SubMenu"
                                              Margin="2"
                                              Grid.IsSharedSizeScope="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="2" Color="Black" />
                                        </Border.Effect>
                                    </Border>
                                    <!--  Border 3  -->
                                    <Border x:Name="TransitionBorder"
                                            Width="0"
                                            Height="2"
                                            Margin="1,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Background="Black"
                                            BorderBrush="Black"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="False" />
                                </Grid>
                            </Popup>
                            <ContentPresenter x:Name="Icon"
                                              Grid.Column="0"
                                              VerticalAlignment="Center"
                                              Margin="10,6,6,6"
                                              ContentSource="Icon" />
                            <ContentPresenter x:Name="HeaderHost"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                            <ContentPresenter x:Name="IGTHost"
                                              Grid.Column="2"
                                              Margin="8,1,8,1"
                                              VerticalAlignment="Center"
                                              ContentSource="InputGestureText" />
                            <Grid x:Name="ArrowPanel"
                                  Grid.Column="3"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Data="M0,0 L0,8 L4,4 z"
                                      Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,0,6,2" />
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Col0" Property="MinWidth" Value="0" />
                            <Setter TargetName="Col3" Property="Width" Value="Auto" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2" />
                            <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,0,6,2" />
                            <Setter TargetName="Col0" Property="MinWidth" Value="0" />
                            <Setter TargetName="Col3" Property="Width" Value="Auto" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="10,3,0,3" />
                            <Setter TargetName="Border" Property="MinHeight" Value="22" />
                            <Setter TargetName="Border" Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="10,3,0,3" />
                            <Setter TargetName="Border" Property="MinHeight" Value="22" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Border" Property="Background" Value="Black" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHiliteBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="TopLevelItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHiliteBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="SubmenuHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHiliteBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="SubmenuItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHiliteBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="true" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="Black" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="ArrowPanelPath" Property="Fill" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Grey60Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>